@model SBAS_Web.Models.PaymentModel
@{
    ViewBag.Title = "EditPayment";
    Layout = "~/Views/Shared/_CustomerLoggedInLayout.cshtml";

    var paymentMethods = (List<SelectListItem>)ViewData["PaymentMethods"];

}

<div class="row">
    <div class="col-lg-12">
        <h1>Payments </h1>
        <nav role="navigation" class="navbar navbar-inverse">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" data-target="#navbarCollapse" data-toggle="collapse" class="navbar-toggle">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div id="navbarCollapse" class="collapse navbar-collapse">
                <div class="nav navbar-nav">
                    <button id="btnViewApptsToBeInvoiced" class="btn btn-primary" style="margin-top: 7px;" onclick="viewUnpaidInvoices();">View Unpaid Invoices</button>
                    <button id="btnSearchInvoices" class="btn btn-primary" style="margin-top: 7px;" onclick="searchPayments();">Search Payments</button>
                </div>
            </div>
        </nav>
    </div>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-credit-card"></i> Edit Payment </h3>
    </div>
    <div class="panel-body">

        <div class="alert alert-success alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            Please select payment method.
        </div>

        <div class="table-responsive">

            @using (Html.BeginForm("EditPayment", "Payment"))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.InvoiceId)
                    @Html.HiddenFor(model => model.InvoiceNumber)
                    @Html.HiddenFor(model => model.ClientId)
                    @Html.HiddenFor(model => model.ClientFirstName)
                    @Html.HiddenFor(model => model.ClientLastName)
                    @Html.HiddenFor(model => model.CustomerId)
                    @Html.HiddenFor(model => model.AmountDue)
                    @Html.HiddenFor(model => model.DueDate)
                    @Html.HiddenFor(model => model.PaymentId)
                    @Html.HiddenFor(model => model.PaymentAmount)
                    @Html.HiddenFor(model => model.PaymentDate)
                    @Html.HiddenFor(model => model.PaymentMethodId)
                    @Html.HiddenFor(model => model.PaymentMethod)
                    @Html.HiddenFor(model => model.CreateUser)
                    @Html.HiddenFor(model => model.CreateDateTime)
                    @Html.HiddenFor(model => model.UpdateUser)
                    @Html.HiddenFor(model => model.UpdateDateTime)

                    <div class="form-group">
                        @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2", })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.InvoiceNumber, new { disabled = "disabled" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.ClientId, new { disabled = "disabled" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.ClientFirstName, new { disabled = "disabled" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.ClientLastName, new { disabled = "disabled" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.PaymentAmount, new { disabled = "disabled" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentMethodType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.PaymentMethodType, new List<SelectListItem>(paymentMethods))
                            @Html.ValidationMessageFor(model => model.PaymentMethodType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <br />
                            <input type="submit" value="Update" class="btn btn-default btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to Payments", "Index")
</div>

@{
    ViewContext.FormContext = null;
}

<script>

    function viewUnpaidInvoices()
    {
        location.href = '/Payment/Index';
    }

    function searchPayments()
    {
        location.href = '/Payment/FindPayment';
    }

</script>

